# AUTOGENERATED. Run generator/main.py to regenerate
"""
[  0   ] [  1   ] [  2   ] [  3   ] [  4   ] [  5   ] [  6   ] [  7   ] [  8   ] [  9   ] [  10  ] [  11  ] [  12  ] [  13  ] [  14  ] [  15  ] [  16  ] [  17  ] [  18  ] [  19  ] [  20  ] [  21  ] [  22  ] [  23  ] [  24  ] [  25  ] [  26  ] [  27  ] [  28  ] [  29  ] [  30  ] [  31  ] [  32  ] [  33  ] [  34  ] [  35  ] [  36  ] [  37  ] [  38  ] [  39  ] [  40  ] [  41  ] [  42  ] [  43  ] [  44  ] [  45  ] [  46  ] [  47  ] [  48  ] [  49  ] [  50  ] [  51  ] [  52  ] [  53  ] [  54  ] [  55  ] [  56  ] [  57  ] [  58  ] [  59  ] [  60  ] [  61  ] [  62  ] [  63  ] [  64  ] [  65  ] [  66  ]
header
remVersion
id
messageId
xsensAcc1
-------- -------- -------- -------- -------- -------- ----1111 11111111 11111111 11111111 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- xsensAcc2
xsensYaw
rateOfTurn
wheelSpeed1
wheelSpeed2
wheelSpeed3
wheelSpeed4
bodyXIntegral
bodyYIntegral
bodyWIntegral
bodyYawIntegral
wheel1Integral
wheel2Integral
wheel3Integral
wheel4Integral
"""

import numpy as np
from . import REM_BaseTypes



class REM_RobotStateInfo:
    header = 0                # integer [0, 255]             Header byte indicating the type of packet
    remVersion = 0            # integer [0, 15]              Version of roboteam_embedded_messages
    id = 0                    # integer [0, 15]              Id of the robot 
    messageId = 0             # integer [0, 15]              Id of the message
    xsensAcc1 = 0             # float   [-50000.000, 50000.000] xsensAcc1
    xsensAcc2 = 0             # float   [-50000.000, 50000.000] xsensAcc2
    xsensYaw = 0              # float   [-50000.000, 50000.000] xsensYaw
    rateOfTurn = 0            # float   [-50000.000, 50000.000] rateOfTurn
    wheelSpeed1 = 0           # float   [-50000.000, 50000.000] wheelSpeed1
    wheelSpeed2 = 0           # float   [-50000.000, 50000.000] wheelSpeed2
    wheelSpeed3 = 0           # float   [-50000.000, 50000.000] wheelSpeed3
    wheelSpeed4 = 0           # float   [-50000.000, 50000.000] wheelSpeed4
    bodyXIntegral = 0         # float   [-50000.000, 50000.000] Integral value from the PID for body_x
    bodyYIntegral = 0         # float   [-50000.000, 50000.000] Integral value from the PID for body_y
    bodyWIntegral = 0         # float   [-50000.000, 50000.000] Integral value from the PID for body_w
    bodyYawIntegral = 0       # float   [-50000.000, 50000.000] Integral value from the PID for body_Yaw
    wheel1Integral = 0        # float   [-50000.000, 50000.000] Integral value from the PID for Wheel_1
    wheel2Integral = 0        # float   [-50000.000, 50000.000] Integral value from the PID for Wheel_2
    wheel3Integral = 0        # float   [-50000.000, 50000.000] Integral value from the PID for Wheel_3
    wheel4Integral = 0        # float   [-50000.000, 50000.000] Integral value from the PID for Wheel_4



# ================================ GETTERS ================================
    @staticmethod
    def get_header(payload):
        return ((payload[0]));

    @staticmethod
    def get_remVersion(payload):
        return ((payload[1] & 0b11110000) >> 4);

    @staticmethod
    def get_id(payload):
        return ((payload[1] & 0b00001111));

    @staticmethod
    def get_messageId(payload):
        return ((payload[2] & 0b11110000) >> 4);

    @staticmethod
    def get_xsensAcc1(payload):
        _xsensAcc1 = ((payload[2] & 0b00001111) << 28) | ((payload[3]) << 20) | ((payload[4]) << 12) | ((payload[5]) << 4) | ((payload[6] & 0b11110000) >> 4);
        return (_xsensAcc1 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_xsensAcc2(payload):
        _xsensAcc2 = ((payload[6] & 0b00001111) << 28) | ((payload[7]) << 20) | ((payload[8]) << 12) | ((payload[9]) << 4) | ((payload[10] & 0b11110000) >> 4);
        return (_xsensAcc2 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_xsensYaw(payload):
        _xsensYaw = ((payload[10] & 0b00001111) << 28) | ((payload[11]) << 20) | ((payload[12]) << 12) | ((payload[13]) << 4) | ((payload[14] & 0b11110000) >> 4);
        return (_xsensYaw * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_rateOfTurn(payload):
        _rateOfTurn = ((payload[14] & 0b00001111) << 28) | ((payload[15]) << 20) | ((payload[16]) << 12) | ((payload[17]) << 4) | ((payload[18] & 0b11110000) >> 4);
        return (_rateOfTurn * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheelSpeed1(payload):
        _wheelSpeed1 = ((payload[18] & 0b00001111) << 28) | ((payload[19]) << 20) | ((payload[20]) << 12) | ((payload[21]) << 4) | ((payload[22] & 0b11110000) >> 4);
        return (_wheelSpeed1 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheelSpeed2(payload):
        _wheelSpeed2 = ((payload[22] & 0b00001111) << 28) | ((payload[23]) << 20) | ((payload[24]) << 12) | ((payload[25]) << 4) | ((payload[26] & 0b11110000) >> 4);
        return (_wheelSpeed2 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheelSpeed3(payload):
        _wheelSpeed3 = ((payload[26] & 0b00001111) << 28) | ((payload[27]) << 20) | ((payload[28]) << 12) | ((payload[29]) << 4) | ((payload[30] & 0b11110000) >> 4);
        return (_wheelSpeed3 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheelSpeed4(payload):
        _wheelSpeed4 = ((payload[30] & 0b00001111) << 28) | ((payload[31]) << 20) | ((payload[32]) << 12) | ((payload[33]) << 4) | ((payload[34] & 0b11110000) >> 4);
        return (_wheelSpeed4 * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_bodyXIntegral(payload):
        _bodyXIntegral = ((payload[34] & 0b00001111) << 28) | ((payload[35]) << 20) | ((payload[36]) << 12) | ((payload[37]) << 4) | ((payload[38] & 0b11110000) >> 4);
        return (_bodyXIntegral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_bodyYIntegral(payload):
        _bodyYIntegral = ((payload[38] & 0b00001111) << 28) | ((payload[39]) << 20) | ((payload[40]) << 12) | ((payload[41]) << 4) | ((payload[42] & 0b11110000) >> 4);
        return (_bodyYIntegral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_bodyWIntegral(payload):
        _bodyWIntegral = ((payload[42] & 0b00001111) << 28) | ((payload[43]) << 20) | ((payload[44]) << 12) | ((payload[45]) << 4) | ((payload[46] & 0b11110000) >> 4);
        return (_bodyWIntegral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_bodyYawIntegral(payload):
        _bodyYawIntegral = ((payload[46] & 0b00001111) << 28) | ((payload[47]) << 20) | ((payload[48]) << 12) | ((payload[49]) << 4) | ((payload[50] & 0b11110000) >> 4);
        return (_bodyYawIntegral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheel1Integral(payload):
        _wheel1Integral = ((payload[50] & 0b00001111) << 28) | ((payload[51]) << 20) | ((payload[52]) << 12) | ((payload[53]) << 4) | ((payload[54] & 0b11110000) >> 4);
        return (_wheel1Integral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheel2Integral(payload):
        _wheel2Integral = ((payload[54] & 0b00001111) << 28) | ((payload[55]) << 20) | ((payload[56]) << 12) | ((payload[57]) << 4) | ((payload[58] & 0b11110000) >> 4);
        return (_wheel2Integral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheel3Integral(payload):
        _wheel3Integral = ((payload[58] & 0b00001111) << 28) | ((payload[59]) << 20) | ((payload[60]) << 12) | ((payload[61]) << 4) | ((payload[62] & 0b11110000) >> 4);
        return (_wheel3Integral * 0.0000232830643708) + -50000.0000000000000000;

    @staticmethod
    def get_wheel4Integral(payload):
        _wheel4Integral = ((payload[62] & 0b00001111) << 28) | ((payload[63]) << 20) | ((payload[64]) << 12) | ((payload[65]) << 4) | ((payload[66] & 0b11110000) >> 4);
        return (_wheel4Integral * 0.0000232830643708) + -50000.0000000000000000;

# ================================ SETTERS ================================
    @staticmethod
    def set_header(payload, header):
        payload[0] = header;

    @staticmethod
    def set_remVersion(payload, remVersion):
        payload[1] = ((remVersion << 4) & 0b11110000) | (payload[1] & 0b00001111);

    @staticmethod
    def set_id(payload, id):
        payload[1] = (id & 0b00001111) | (payload[1] & 0b11110000);

    @staticmethod
    def set_messageId(payload, messageId):
        payload[2] = ((messageId << 4) & 0b11110000) | (payload[2] & 0b00001111);

    @staticmethod
    def set_xsensAcc1(payload, xsensAcc1):
        _xsensAcc1 = int((xsensAcc1 +50000.0000000000000000) / 0.0000232830643708);
        payload[2] = ((_xsensAcc1 >> 28) & 0b00001111) | (payload[2] & 0b11110000);
        payload[3] = (_xsensAcc1 >> 20);
        payload[4] = (_xsensAcc1 >> 12);
        payload[5] = (_xsensAcc1 >> 4);
        payload[6] = ((_xsensAcc1 << 4) & 0b11110000) | (payload[6] & 0b00001111);

    @staticmethod
    def set_xsensAcc2(payload, xsensAcc2):
        _xsensAcc2 = int((xsensAcc2 +50000.0000000000000000) / 0.0000232830643708);
        payload[6] = ((_xsensAcc2 >> 28) & 0b00001111) | (payload[6] & 0b11110000);
        payload[7] = (_xsensAcc2 >> 20);
        payload[8] = (_xsensAcc2 >> 12);
        payload[9] = (_xsensAcc2 >> 4);
        payload[10] = ((_xsensAcc2 << 4) & 0b11110000) | (payload[10] & 0b00001111);

    @staticmethod
    def set_xsensYaw(payload, xsensYaw):
        _xsensYaw = int((xsensYaw +50000.0000000000000000) / 0.0000232830643708);
        payload[10] = ((_xsensYaw >> 28) & 0b00001111) | (payload[10] & 0b11110000);
        payload[11] = (_xsensYaw >> 20);
        payload[12] = (_xsensYaw >> 12);
        payload[13] = (_xsensYaw >> 4);
        payload[14] = ((_xsensYaw << 4) & 0b11110000) | (payload[14] & 0b00001111);

    @staticmethod
    def set_rateOfTurn(payload, rateOfTurn):
        _rateOfTurn = int((rateOfTurn +50000.0000000000000000) / 0.0000232830643708);
        payload[14] = ((_rateOfTurn >> 28) & 0b00001111) | (payload[14] & 0b11110000);
        payload[15] = (_rateOfTurn >> 20);
        payload[16] = (_rateOfTurn >> 12);
        payload[17] = (_rateOfTurn >> 4);
        payload[18] = ((_rateOfTurn << 4) & 0b11110000) | (payload[18] & 0b00001111);

    @staticmethod
    def set_wheelSpeed1(payload, wheelSpeed1):
        _wheelSpeed1 = int((wheelSpeed1 +50000.0000000000000000) / 0.0000232830643708);
        payload[18] = ((_wheelSpeed1 >> 28) & 0b00001111) | (payload[18] & 0b11110000);
        payload[19] = (_wheelSpeed1 >> 20);
        payload[20] = (_wheelSpeed1 >> 12);
        payload[21] = (_wheelSpeed1 >> 4);
        payload[22] = ((_wheelSpeed1 << 4) & 0b11110000) | (payload[22] & 0b00001111);

    @staticmethod
    def set_wheelSpeed2(payload, wheelSpeed2):
        _wheelSpeed2 = int((wheelSpeed2 +50000.0000000000000000) / 0.0000232830643708);
        payload[22] = ((_wheelSpeed2 >> 28) & 0b00001111) | (payload[22] & 0b11110000);
        payload[23] = (_wheelSpeed2 >> 20);
        payload[24] = (_wheelSpeed2 >> 12);
        payload[25] = (_wheelSpeed2 >> 4);
        payload[26] = ((_wheelSpeed2 << 4) & 0b11110000) | (payload[26] & 0b00001111);

    @staticmethod
    def set_wheelSpeed3(payload, wheelSpeed3):
        _wheelSpeed3 = int((wheelSpeed3 +50000.0000000000000000) / 0.0000232830643708);
        payload[26] = ((_wheelSpeed3 >> 28) & 0b00001111) | (payload[26] & 0b11110000);
        payload[27] = (_wheelSpeed3 >> 20);
        payload[28] = (_wheelSpeed3 >> 12);
        payload[29] = (_wheelSpeed3 >> 4);
        payload[30] = ((_wheelSpeed3 << 4) & 0b11110000) | (payload[30] & 0b00001111);

    @staticmethod
    def set_wheelSpeed4(payload, wheelSpeed4):
        _wheelSpeed4 = int((wheelSpeed4 +50000.0000000000000000) / 0.0000232830643708);
        payload[30] = ((_wheelSpeed4 >> 28) & 0b00001111) | (payload[30] & 0b11110000);
        payload[31] = (_wheelSpeed4 >> 20);
        payload[32] = (_wheelSpeed4 >> 12);
        payload[33] = (_wheelSpeed4 >> 4);
        payload[34] = ((_wheelSpeed4 << 4) & 0b11110000) | (payload[34] & 0b00001111);

    @staticmethod
    def set_bodyXIntegral(payload, bodyXIntegral):
        _bodyXIntegral = int((bodyXIntegral +50000.0000000000000000) / 0.0000232830643708);
        payload[34] = ((_bodyXIntegral >> 28) & 0b00001111) | (payload[34] & 0b11110000);
        payload[35] = (_bodyXIntegral >> 20);
        payload[36] = (_bodyXIntegral >> 12);
        payload[37] = (_bodyXIntegral >> 4);
        payload[38] = ((_bodyXIntegral << 4) & 0b11110000) | (payload[38] & 0b00001111);

    @staticmethod
    def set_bodyYIntegral(payload, bodyYIntegral):
        _bodyYIntegral = int((bodyYIntegral +50000.0000000000000000) / 0.0000232830643708);
        payload[38] = ((_bodyYIntegral >> 28) & 0b00001111) | (payload[38] & 0b11110000);
        payload[39] = (_bodyYIntegral >> 20);
        payload[40] = (_bodyYIntegral >> 12);
        payload[41] = (_bodyYIntegral >> 4);
        payload[42] = ((_bodyYIntegral << 4) & 0b11110000) | (payload[42] & 0b00001111);

    @staticmethod
    def set_bodyWIntegral(payload, bodyWIntegral):
        _bodyWIntegral = int((bodyWIntegral +50000.0000000000000000) / 0.0000232830643708);
        payload[42] = ((_bodyWIntegral >> 28) & 0b00001111) | (payload[42] & 0b11110000);
        payload[43] = (_bodyWIntegral >> 20);
        payload[44] = (_bodyWIntegral >> 12);
        payload[45] = (_bodyWIntegral >> 4);
        payload[46] = ((_bodyWIntegral << 4) & 0b11110000) | (payload[46] & 0b00001111);

    @staticmethod
    def set_bodyYawIntegral(payload, bodyYawIntegral):
        _bodyYawIntegral = int((bodyYawIntegral +50000.0000000000000000) / 0.0000232830643708);
        payload[46] = ((_bodyYawIntegral >> 28) & 0b00001111) | (payload[46] & 0b11110000);
        payload[47] = (_bodyYawIntegral >> 20);
        payload[48] = (_bodyYawIntegral >> 12);
        payload[49] = (_bodyYawIntegral >> 4);
        payload[50] = ((_bodyYawIntegral << 4) & 0b11110000) | (payload[50] & 0b00001111);

    @staticmethod
    def set_wheel1Integral(payload, wheel1Integral):
        _wheel1Integral = int((wheel1Integral +50000.0000000000000000) / 0.0000232830643708);
        payload[50] = ((_wheel1Integral >> 28) & 0b00001111) | (payload[50] & 0b11110000);
        payload[51] = (_wheel1Integral >> 20);
        payload[52] = (_wheel1Integral >> 12);
        payload[53] = (_wheel1Integral >> 4);
        payload[54] = ((_wheel1Integral << 4) & 0b11110000) | (payload[54] & 0b00001111);

    @staticmethod
    def set_wheel2Integral(payload, wheel2Integral):
        _wheel2Integral = int((wheel2Integral +50000.0000000000000000) / 0.0000232830643708);
        payload[54] = ((_wheel2Integral >> 28) & 0b00001111) | (payload[54] & 0b11110000);
        payload[55] = (_wheel2Integral >> 20);
        payload[56] = (_wheel2Integral >> 12);
        payload[57] = (_wheel2Integral >> 4);
        payload[58] = ((_wheel2Integral << 4) & 0b11110000) | (payload[58] & 0b00001111);

    @staticmethod
    def set_wheel3Integral(payload, wheel3Integral):
        _wheel3Integral = int((wheel3Integral +50000.0000000000000000) / 0.0000232830643708);
        payload[58] = ((_wheel3Integral >> 28) & 0b00001111) | (payload[58] & 0b11110000);
        payload[59] = (_wheel3Integral >> 20);
        payload[60] = (_wheel3Integral >> 12);
        payload[61] = (_wheel3Integral >> 4);
        payload[62] = ((_wheel3Integral << 4) & 0b11110000) | (payload[62] & 0b00001111);

    @staticmethod
    def set_wheel4Integral(payload, wheel4Integral):
        _wheel4Integral = int((wheel4Integral +50000.0000000000000000) / 0.0000232830643708);
        payload[62] = ((_wheel4Integral >> 28) & 0b00001111) | (payload[62] & 0b11110000);
        payload[63] = (_wheel4Integral >> 20);
        payload[64] = (_wheel4Integral >> 12);
        payload[65] = (_wheel4Integral >> 4);
        payload[66] = ((_wheel4Integral << 4) & 0b11110000) | (payload[66] & 0b00001111);

# ================================ ENCODE ================================
    def encode(self):
        payload = np.zeros(REM_BaseTypes.PACKET_SIZE_REM_ROBOT_STATE_INFO, dtype=np.uint8)
        REM_RobotStateInfo.set_header              (payload, self.header)
        REM_RobotStateInfo.set_remVersion          (payload, self.remVersion)
        REM_RobotStateInfo.set_id                  (payload, self.id)
        REM_RobotStateInfo.set_messageId           (payload, self.messageId)
        REM_RobotStateInfo.set_xsensAcc1           (payload, self.xsensAcc1)
        REM_RobotStateInfo.set_xsensAcc2           (payload, self.xsensAcc2)
        REM_RobotStateInfo.set_xsensYaw            (payload, self.xsensYaw)
        REM_RobotStateInfo.set_rateOfTurn          (payload, self.rateOfTurn)
        REM_RobotStateInfo.set_wheelSpeed1         (payload, self.wheelSpeed1)
        REM_RobotStateInfo.set_wheelSpeed2         (payload, self.wheelSpeed2)
        REM_RobotStateInfo.set_wheelSpeed3         (payload, self.wheelSpeed3)
        REM_RobotStateInfo.set_wheelSpeed4         (payload, self.wheelSpeed4)
        REM_RobotStateInfo.set_bodyXIntegral       (payload, self.bodyXIntegral)
        REM_RobotStateInfo.set_bodyYIntegral       (payload, self.bodyYIntegral)
        REM_RobotStateInfo.set_bodyWIntegral       (payload, self.bodyWIntegral)
        REM_RobotStateInfo.set_bodyYawIntegral     (payload, self.bodyYawIntegral)
        REM_RobotStateInfo.set_wheel1Integral      (payload, self.wheel1Integral)
        REM_RobotStateInfo.set_wheel2Integral      (payload, self.wheel2Integral)
        REM_RobotStateInfo.set_wheel3Integral      (payload, self.wheel3Integral)
        REM_RobotStateInfo.set_wheel4Integral      (payload, self.wheel4Integral)
        return payload


# ================================ DECODE ================================
    def decode(self, payload):
        self.header           = REM_RobotStateInfo.get_header(payload)
        self.remVersion       = REM_RobotStateInfo.get_remVersion(payload)
        self.id               = REM_RobotStateInfo.get_id(payload)
        self.messageId        = REM_RobotStateInfo.get_messageId(payload)
        self.xsensAcc1        = REM_RobotStateInfo.get_xsensAcc1(payload)
        self.xsensAcc2        = REM_RobotStateInfo.get_xsensAcc2(payload)
        self.xsensYaw         = REM_RobotStateInfo.get_xsensYaw(payload)
        self.rateOfTurn       = REM_RobotStateInfo.get_rateOfTurn(payload)
        self.wheelSpeed1      = REM_RobotStateInfo.get_wheelSpeed1(payload)
        self.wheelSpeed2      = REM_RobotStateInfo.get_wheelSpeed2(payload)
        self.wheelSpeed3      = REM_RobotStateInfo.get_wheelSpeed3(payload)
        self.wheelSpeed4      = REM_RobotStateInfo.get_wheelSpeed4(payload)
        self.bodyXIntegral    = REM_RobotStateInfo.get_bodyXIntegral(payload)
        self.bodyYIntegral    = REM_RobotStateInfo.get_bodyYIntegral(payload)
        self.bodyWIntegral    = REM_RobotStateInfo.get_bodyWIntegral(payload)
        self.bodyYawIntegral  = REM_RobotStateInfo.get_bodyYawIntegral(payload)
        self.wheel1Integral   = REM_RobotStateInfo.get_wheel1Integral(payload)
        self.wheel2Integral   = REM_RobotStateInfo.get_wheel2Integral(payload)
        self.wheel3Integral   = REM_RobotStateInfo.get_wheel3Integral(payload)
        self.wheel4Integral   = REM_RobotStateInfo.get_wheel4Integral(payload)


    def print_bit_string(self):
        payload = self.encode()
        for i in range(len(payload)):
            print(format(payload[i], '08b'), end=" ")
        print()
