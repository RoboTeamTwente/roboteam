apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  name: roboteam-ray-cluster
spec:
  rayVersion: "2.38.0"  
  # Head node configuration
  headGroupSpec:
    rayStartParams:
      dashboard-host: "0.0.0.0"
      node-ip-address: "$(POD_IP)"
    template:
      metadata:
        labels:
          app: ray-head
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - ray  # Schedule on control-plane
        containers:
        - name: ray-head
          image: roboteamtwente/ray:development
          imagePullPolicy: Always
          ports:
          - containerPort: 8265  # dashboard
          - containerPort: 6379  # redis
          - containerPort: 10001 # GCS server
          - containerPort: 8000  # Serve
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          command: ["/bin/bash", "-c", "--"]
          args: ["ray start --head --port=6379 --dashboard-host=0.0.0.0 --node-ip-address=$(POD_IP) --block"]
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - "wget -T 2 -q -O- http://localhost:52365/api/local_raylet_healthz | grep success"
            initialDelaySeconds: 15
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - "wget -T 10 -q -O- http://localhost:8265/api/gcs_healthz | grep success"
            initialDelaySeconds: 15
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 5

  # Worker node configuration with integrated simulator
  workerGroupSpecs:
    - groupName: worker-group
      replicas: 1      
      minReplicas: 1  # Specify minimum number of worker replicas
      maxReplicas: 1  # Optional: specify maximum number of replicas
      rayStartParams:
        num-cpus: "1"
      template:
        metadata:
          labels:
            app: ray-worker
        spec:
          hostNetwork: False
          dnsPolicy: ClusterFirstWithHostNet
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                    - ray-m02  # Schedule on worker node
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app: ray-worker
                topologyKey: "kubernetes.io/hostname"
          volumes:
          - name: gradle-cache
            emptyDir: {}
          containers:

          # Ray worker container
          - name: ray-worker
            image: roboteamtwente/ray:development
            imagePullPolicy: Always
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                cpu: 1500m
                memory: 3Gi
            env:
            - name: LD_LIBRARY_PATH
              value: /home/roboteam/build/release/lib
            command: ["/bin/bash", "-c", "--"]
            args: ["ray start --address='roboteam-ray-cluster-head-svc.default.svc.cluster.local:6379' --block"]

          # Game Controller
          - name: ssl-game-controller
            image: robocupssl/ssl-game-controller:latest
            args: ["-address", "0.0.0.0:8081"]
            ports:
              - containerPort: 8081
                protocol: TCP

          # Primary AI
          - name: roboteam-primary-ai
            image: roboteamtwente/roboteam:kubernetes
            command: ["/bin/sh"]
            args: ["-c", "/home/roboteam/build/release/bin/roboteam_ai --primary-ai"]
            workingDir: /home/roboteam
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib
            resources:
              requests:
                cpu: 60m
                memory: 10Mi
              limits:
                cpu: 100m
                memory: 50Mi

          # Observer
          - name: roboteam-observer-sim
            image: roboteamtwente/roboteam:kubernetes
            command: ["/bin/sh"]
            args: ["-c", "/home/roboteam/build/release/bin/roboteam_observer --vision-ip 224.5.23.2 --referee-ip 224.5.23.1 --vision-port 10020 --referee-port 10003 --log"]
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib
            workingDir: /home/roboteam
            resources:
              requests:
                cpu: 60m
                memory: 60Mi
              limits:
                cpu: 100m
                memory: 90Mi

          # Robothub
          - name: roboteam-robothub-sim
            image: roboteamtwente/roboteam:kubernetes
            command: ["/bin/sh"]
            args: ["-c", "/home/roboteam/build/release/bin/roboteam_robothub"]
            workingDir: /home/roboteam
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib
            resources:
              requests:
                cpu: 30m
                memory: 20Mi
              limits:
                cpu: 60m
                memory: 50Mi

          # Autoref
          - name: erforce-autoref-sim
            image: roboteamtwente/roboteam:kubernetes
            command: ["/bin/sh"]
            args: ["-c", "cd /home/roboteam/external/autoref/build/bin && ./autoref-cli --vision-port 10020 --tracker-port 10010 --gc-port 10003"]
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib
            resources:
              requests:
                cpu: 120m
                memory: 40Mi
              limits:
                cpu: 150m
                memory: 100Mi

          # Simulator
          - name: erforce-simulator
            image: roboteamtwente/roboteam:kubernetes
            command: ["/bin/sh"]
            args: 
            - "-c"
            - "/home/roboteam/external/framework/build/bin/simulator-cli"
            ports:
              - containerPort: 10300
                protocol: UDP
              - containerPort: 10301
                protocol: TCP
              - containerPort: 5558
                protocol: TCP
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib

          # Tigers Sumatra
          - name: tigers-sumatra
            image: roboteamtwente/roboteam:kubernetes
            imagePullPolicy: Always
            command: ["/bin/sh"]
            args: ["-c", "cd /home/roboteam/tigers_sumatra && ./gradlew :run --args=\"--headless --moduli roboteamtwente --aiBlue --visionAddress 224.5.23.2:10020 --refereeAddress 224.5.23.1:10003\""]
            env:
              - name: LD_LIBRARY_PATH
                value: /home/roboteam/build/release/lib
            resources:
              requests:
                cpu: 500m
                memory: 1400Mi
              limits:
                cpu: 700m
                memory: 1800Mi
            volumeMounts:
            - name: gradle-cache
              mountPath: /home/roboteam/.gradle

---
# Nodeport service for external access
apiVersion: v1
kind: Service
metadata:
  name: roboteam-ray-cluster-head-nodeport
spec:
  type: NodePort
  selector:
    app: ray-head
  ports:
  - name: dashboard
    port: 8265
    targetPort: 8265
    nodePort: 30265  # Ray dashboard
  - name: gcs
    port: 10001
    targetPort: 10001
    nodePort: 31001  # GCS server
  - name: gc-interface
    port: 8081
    targetPort: 8081
    nodePort: 30081  # Game controller interface
  - name: redis
    port: 6379  
    targetPort: 6379
    nodePort: 30679  # Choose an available port

---
apiVersion: v1
kind: Service
metadata:
  name: roboteam-ray-cluster-head-svc
spec:
  type: ClusterIP
  selector:
    app: ray-head
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  - name: gcs
    port: 10001
    targetPort: 10001
  - name: dashboard
    port: 8265
    targetPort: 8265
  - name: serve
    port: 8000
    targetPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: roboteam-ray-worker-svc
spec:
  selector:
    app: ray-worker
  ports:
  - name: game-controller
    port: 8081
    targetPort: 8081
  - name: simulator
    port: 5558
    targetPort: 5558
