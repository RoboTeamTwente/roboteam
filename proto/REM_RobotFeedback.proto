// AUTOGENERATED. Run generator/main.py to regenerate
/*
[  0   ] [  1   ] [  2   ] [  3   ] [  4   ] [  5   ] [  6   ] [  7   ] [  8   ] [  9   ] [  10  ] [  11  ] [  12  ]
11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- header
-------- 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- remVersion
-------- ----1111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- id
-------- -------- 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- messageId
-------- -------- ----1111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- batteryLevel
-------- -------- -------- 1------- -------- -------- -------- -------- -------- -------- -------- -------- -------- XsensCalibrated
-------- -------- -------- -1------ -------- -------- -------- -------- -------- -------- -------- -------- -------- ballSensorWorking
-------- -------- -------- --1----- -------- -------- -------- -------- -------- -------- -------- -------- -------- ballSensorSeesBall
-------- -------- -------- ---1---- -------- -------- -------- -------- -------- -------- -------- -------- -------- dribblerSeesBall
-------- -------- -------- ----1--- -------- -------- -------- -------- -------- -------- -------- -------- -------- capacitorCharged
-------- -------- -------- -----111 1------- -------- -------- -------- -------- -------- -------- -------- -------- ballPos
-------- -------- -------- -------- -1111111 11111111 1------- -------- -------- -------- -------- -------- -------- rho
-------- -------- -------- -------- -------- -------- -1111111 11111111 1------- -------- -------- -------- -------- theta
-------- -------- -------- -------- -------- -------- -------- -------- -1111111 11111111 1------- -------- -------- angle
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -1111--- -------- -------- wheelLocked
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -----111 1------- -------- wheelBraking
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -1111111 1------- rssi
*/

syntax="proto3";

package proto;

message REM_RobotFeedback {
    uint32 header = 1;        // integer [0, 255]             Header byte indicating the type of packet
    uint32 remVersion = 2;    // integer [0, 15]              Version of roboteam_embedded_messages
    uint32 id = 3;            // integer [0, 15]              Id of the robot 
    uint32 messageId = 4;     // integer [0, 15]              Id of the message
    uint32 batteryLevel = 5;  // integer [0, 15]              The voltage level of the battery
    bool XsensCalibrated = 6; // integer [0, 1]               Indicates if the XSens IMU is calibrated
    bool ballSensorWorking = 7; // integer [0, 1]               Indicates if the ballsensor is working
    bool ballSensorSeesBall = 8; // integer [0, 1]               Indicates if the ballsensor sees the ball
    bool dribblerSeesBall = 9; // integer [0, 1]               Indicates if the dribbler sees the ball
    bool capacitorCharged = 10; // integer [0, 1]               Indicates if the capacitor for kicking and chipping is charged
    float ballPos = 11;       // float   [-0.500, 0.500]      Indicates where in front of the ballsensor the ball is
    float rho = 12;           // float   [0.000, 8.000]       The estimated magnitude of movement (m/s)
    float theta = 13;         // float   [-3.142, 3.142]      The estimated direction of movement (rad)
    float angle = 14;         // float   [-3.142, 3.142]      The estimated angle (rad)
    uint32 wheelLocked = 15;  // integer [0, 15]              Indicates if a wheel is locked. One bit per wheel
    uint32 wheelBraking = 16; // integer [0, 15]              Indicates if a wheel is slipping. One bit per wheel
    uint32 rssi = 17;         // integer [0, 255]             Signal strength of the last packet received by the robot
}
