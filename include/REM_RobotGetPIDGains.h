// AUTOGENERATED. Run generator/main.py to regenerate
/*
[  0   ] [  1   ]
11111111 -------- header
-------- 1111---- remVersion
-------- ----1111 id
*/

#ifndef __REM_ROBOT_GET_PIDGAINS_H
#define __REM_ROBOT_GET_PIDGAINS_H

#include <stdbool.h>
#include <stdint.h>
#include "REM_BaseTypes.h"

typedef struct _REM_RobotGetPIDGainsPayload {
    uint8_t payload[PACKET_SIZE_REM_ROBOT_GET_PIDGAINS];
} REM_RobotGetPIDGainsPayload;

typedef struct _REM_RobotGetPIDGains {
    uint32_t   header              ; // integer [0, 255]             Header byte indicating the type of packet
    uint32_t   remVersion          ; // integer [0, 15]              Version of roboteam_embedded_messages
    uint32_t   id                  ; // integer [0, 15]              Id of the robot
} REM_RobotGetPIDGains;

// ================================ GETTERS ================================
static inline uint32_t REM_RobotGetPIDGains_get_header(REM_RobotGetPIDGainsPayload *remrgpidgp){
    return ((remrgpidgp->payload[0]));
}

static inline uint32_t REM_RobotGetPIDGains_get_remVersion(REM_RobotGetPIDGainsPayload *remrgpidgp){
    return ((remrgpidgp->payload[1] & 0b11110000) >> 4);
}

static inline uint32_t REM_RobotGetPIDGains_get_id(REM_RobotGetPIDGainsPayload *remrgpidgp){
    return ((remrgpidgp->payload[1] & 0b00001111));
}

// ================================ SETTERS ================================
static inline void REM_RobotGetPIDGains_set_header(REM_RobotGetPIDGainsPayload *remrgpidgp, uint32_t header){
    remrgpidgp->payload[0] = header;
}

static inline void REM_RobotGetPIDGains_set_remVersion(REM_RobotGetPIDGainsPayload *remrgpidgp, uint32_t remVersion){
    remrgpidgp->payload[1] = ((remVersion << 4) & 0b11110000) | (remrgpidgp->payload[1] & 0b00001111);
}

static inline void REM_RobotGetPIDGains_set_id(REM_RobotGetPIDGainsPayload *remrgpidgp, uint32_t id){
    remrgpidgp->payload[1] = (id & 0b00001111) | (remrgpidgp->payload[1] & 0b11110000);
}

// ================================ ENCODE ================================
static inline void encodeREM_RobotGetPIDGains(REM_RobotGetPIDGainsPayload *remrgpidgp, REM_RobotGetPIDGains *remrgpidg){
    REM_RobotGetPIDGains_set_header              (remrgpidgp, remrgpidg->header);
    REM_RobotGetPIDGains_set_remVersion          (remrgpidgp, remrgpidg->remVersion);
    REM_RobotGetPIDGains_set_id                  (remrgpidgp, remrgpidg->id);
}

// ================================ DECODE ================================
static inline void decodeREM_RobotGetPIDGains(REM_RobotGetPIDGains *remrgpidg, REM_RobotGetPIDGainsPayload *remrgpidgp){
    remrgpidg->header    = REM_RobotGetPIDGains_get_header(remrgpidgp);
    remrgpidg->remVersion= REM_RobotGetPIDGains_get_remVersion(remrgpidgp);
    remrgpidg->id        = REM_RobotGetPIDGains_get_id(remrgpidgp);
}

#endif /*__REM_ROBOT_GET_PIDGAINS_H*/
