// AUTOGENERATED. Run generator/main.py to regenerate
/*
[  0   ]
11111111 header
*/

#ifndef __BASESTATION_GET_CONFIGURATION_H
#define __BASESTATION_GET_CONFIGURATION_H

#include <stdbool.h>
#include <stdint.h>
#include "BaseTypes.h"

typedef struct _BasestationGetConfigurationPayload {
    uint8_t payload[PACKET_SIZE_BASESTATION_GET_CONFIGURATION];
} BasestationGetConfigurationPayload;

typedef struct _BasestationGetConfiguration {
    uint32_t   header              ; // integer [0, 255]             Header byte indicating the type of packet
} BasestationGetConfiguration;

// ================================ GETTERS ================================
static inline uint32_t BasestationGetConfiguration_get_header(BasestationGetConfigurationPayload *bgcp){
    return ((bgcp->payload[0]));
}

// ================================ SETTERS ================================
static inline void BasestationGetConfiguration_set_header(BasestationGetConfigurationPayload *bgcp, uint32_t header){
    bgcp->payload[0] = header;
}

// ================================ ENCODE ================================
static inline void encodeBasestationGetConfiguration(BasestationGetConfigurationPayload *bgcp, BasestationGetConfiguration *bgc){
    BasestationGetConfiguration_set_header              (bgcp, bgc->header);
}

// ================================ DECODE ================================
static inline void decodeBasestationGetConfiguration(BasestationGetConfiguration *bgc, BasestationGetConfigurationPayload *bgcp){
    bgc->header          = BasestationGetConfiguration_get_header(bgcp);
}

#endif /*__BASESTATION_GET_CONFIGURATION_H*/
