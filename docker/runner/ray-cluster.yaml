apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  name: roboteam-ray-cluster
spec:
  rayVersion: "2.38.0"  
  # Head node configuration
  headGroupSpec:
    rayStartParams:
      dashboard-host: "0.0.0.0"
      node-ip-address: "$(HOST_IP)"
    template:
      metadata:
        labels:
          app: ray-head
      spec:
        hostNetwork: false
        # Add node affinity for head node
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - multinode-demo
        containers:
        - name: ray-head
          image: roboteamtwente/ray:development
          imagePullPolicy: Always
          ports:
          - containerPort: 8265
          - containerPort: 6379
          - containerPort: 10001
          - containerPort: 8000
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          command: ["/bin/bash", "-c", "--"]
          args: ["ray start --head --port=6379 --bind-address=0.0.0.0 --dashboard-host=0.0.0.0 --node-ip-address=$(HOST_IP) --block"]
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - "wget -T 2 -q -O- http://localhost:52365/api/local_raylet_healthz | grep success"
            initialDelaySeconds: 90
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - "wget -T 10 -q -O- http://localhost:8265/api/gcs_healthz | grep success"
            initialDelaySeconds: 90
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 5


  # Worker node configuration
  workerGroupSpecs:
    - groupName: worker-group
      replicas: 1
      rayStartParams:
        num-cpus: "1" 
      template:
        metadata:
          labels:
            app: ray-worker
        spec:
          hostNetwork: true
          # Replace pod anti-affinity with node affinity
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                    - multinode-demo-m02
          containers:
          - name: ray-worker
            image: roboteamtwente/ray:development
            imagePullPolicy: Always
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                cpu: 1000m
                memory: 2Gi
            env:
            - name: RAY_HEAD_IP
              value: "roboteam-ray-cluster-head-svc.default.svc.cluster.local"
            - name: LD_LIBRARY_PATH
              value: /home/roboteam/build/release/lib
            - name: VISION_ADDRESS
              value: "224.5.23.2"
            - name: VISION_PORT
              value: "10020"
            - name: REFEREE_ADDRESS
              value: "224.5.23.1"
            - name: REFEREE_PORT
              value: "10003"
            - name: GC_PORT
              value: "8081"
            command: ["/bin/bash", "-c", "--"]
            args: ["ray start --address='roboteam-ray-cluster-head-svc.default.svc.cluster.local:6379' --block"]

#Add service for port forwarding
---
apiVersion: v1
kind: Service
metadata:
  name: roboteam-ray-cluster-head-nodeport  # Changed name to avoid conflict
spec:
  type: NodePort
  selector:
    app: ray-head
  ports:
  - name: dashboard
    port: 8265
    targetPort: 8265
    nodePort: 30265  # Ray dashboard
  - name: redis
    port: 6379
    targetPort: 6379
    nodePort: 30679  # Redis
  - name: gcs
    port: 10001
    targetPort: 10001
    nodePort: 31001  # GCS server
  - name: serve
    port: 8000
    targetPort: 8000
    nodePort: 30800  # Serve

---
apiVersion: v1
kind: Service
metadata:
  name: roboteam-ray-cluster-head-svc
spec:
  type: ClusterIP
  selector:
    app: ray-head
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  - name: gcs
    port: 10001
    targetPort: 10001
  - name: dashboard
    port: 8265
    targetPort: 8265
  - name: serve
    port: 8000
    targetPort: 8000