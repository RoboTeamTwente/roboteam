# AUTOGENERATED. Run generator/main.py to regenerate
"""
[  0   ] [  1   ] [  2   ] [  3   ] [  4   ] [  5   ] [  6   ] [  7   ] [  8   ] [  9   ] [  10  ] [  11  ] [  12  ] [  13  ] [  14  ] [  15  ] [  16  ] [  17  ] [  18  ] [  19  ] [  20  ] [  21  ] [  22  ] [  23  ] [  24  ] [  25  ] [  26  ] [  27  ] [  28  ] [  29  ] [  30  ] [  31  ] [  32  ] [  33  ] [  34  ] [  35  ] [  36  ] [  37  ]
11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- header
-------- 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- toRobotId
-------- ----1--- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- toColor
-------- -----1-- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- toBC
-------- ------1- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- toBS
-------- -------1 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- toPC
-------- -------- 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- fromRobotId
-------- -------- ----1--- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- fromColor
-------- -------- -----1-- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- reserved
-------- -------- ------1- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- fromBS
-------- -------- -------1 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- fromPC
-------- -------- -------- 1111---- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- remVersion
-------- -------- -------- ----1111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- messageId
-------- -------- -------- -------- 11111111 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- timestamp
-------- -------- -------- -------- -------- -------- -------- 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- payloadSize
-------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyX
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- IbodyX
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- DbodyX
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyY
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- IbodyY
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- DbodyY
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyW
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- IbodyW
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- DbodyW
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- PbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- -------- -------- IbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- -------- -------- DbodyYaw
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- -------- -------- Pwheels
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 -------- -------- Iwheels
-------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- 11111111 11111111 Dwheels
"""

import numpy as np
from . import REM_BaseTypes



class REM_RobotPIDGains:
    header = 0                # integer [0, 255]             Header byte indicating the type of packet
    toRobotId = 0             # integer [0, 15]              Id of the receiving robot
    toColor = 0               # integer [0, 1]               Color of the receiving robot / basestation. Yellow = 0, Blue = 1
    toBC = 0                  # integer [0, 1]               Bit indicating this packet has to be broadcasted to all robots
    toBS = 0                  # integer [0, 1]               Bit indicating this packet is meant for the basestation
    toPC = 0                  # integer [0, 1]               Bit indicating this packet is meant for the PC
    fromRobotId = 0           # integer [0, 15]              Id of the transmitting robot
    fromColor = 0             # integer [0, 1]               Color of the transmitting robot / basestation. Yellow = 0, Blue = 1
    reserved = 0              # integer [0, 1]               reserved
    fromBS = 0                # integer [0, 1]               Bit indicating this packet is coming from the basestation
    fromPC = 0                # integer [0, 1]               Bit indicating this packet is coming from the PC
    remVersion = 0            # integer [0, 15]              Version of roboteam_embedded_messages
    messageId = 0             # integer [0, 15]              messageId. Can be used for aligning packets
    timestamp = 0             # integer [0, 16777215]        Timestamp in milliseconds
    payloadSize = 0           # integer [0, 255]             Size of the payload. At most 255 bytes including the generic_packet_header. Keep the 127 byte SX1280 limit in mind
    PbodyX = 0                # float   [0.000, 40.000]      Received P gain of the PID for body_x (x-direction)
    IbodyX = 0                # float   [0.000, 20.000]      Received I gain of the PID for body_x (x-direction)
    DbodyX = 0                # float   [0.000, 10.000]      Received D gain of the PID for body_x (x-direction)
    PbodyY = 0                # float   [0.000, 40.000]      Received P gain of the PID for body_y (y-direction)
    IbodyY = 0                # float   [0.000, 20.000]      Received I gain of the PID for body_y (y-direction)
    DbodyY = 0                # float   [0.000, 10.000]      Received D gain of the PID for body_y (y-direction)
    PbodyW = 0                # float   [0.000, 40.000]      Received P gain of the PID for body_w (Angular velocity)
    IbodyW = 0                # float   [0.000, 20.000]      Received I gain of the PID for body_w (Angular velocity)
    DbodyW = 0                # float   [0.000, 10.000]      Received D gain of the PID for body_w (Angular velocity)
    PbodyYaw = 0              # float   [0.000, 40.000]      Received P gain of the PID for body_yaw (Absolute angle)
    IbodyYaw = 0              # float   [0.000, 20.000]      Received I gain of the PID for body_yaw (Absolute angle)
    DbodyYaw = 0              # float   [0.000, 10.000]      Received D gain of the PID for body_yaw (Absolute angle)
    Pwheels = 0               # float   [0.000, 40.000]      Received P gain of the PID for the wheels
    Iwheels = 0               # float   [0.000, 20.000]      Received I gain of the PID for the wheels
    Dwheels = 0               # float   [0.000, 10.000]      Received D gain of the PID for the wheels



# ================================ GETTERS ================================
    @staticmethod
    def get_header(payload):
        return ((payload[0]));

    @staticmethod
    def get_toRobotId(payload):
        return ((payload[1] & 0b11110000) >> 4);

    @staticmethod
    def get_toColor(payload):
        return (payload[1] & 0b00001000) > 0;

    @staticmethod
    def get_toBC(payload):
        return (payload[1] & 0b00000100) > 0;

    @staticmethod
    def get_toBS(payload):
        return (payload[1] & 0b00000010) > 0;

    @staticmethod
    def get_toPC(payload):
        return (payload[1] & 0b00000001) > 0;

    @staticmethod
    def get_fromRobotId(payload):
        return ((payload[2] & 0b11110000) >> 4);

    @staticmethod
    def get_fromColor(payload):
        return (payload[2] & 0b00001000) > 0;

    @staticmethod
    def get_reserved(payload):
        return (payload[2] & 0b00000100) > 0;

    @staticmethod
    def get_fromBS(payload):
        return (payload[2] & 0b00000010) > 0;

    @staticmethod
    def get_fromPC(payload):
        return (payload[2] & 0b00000001) > 0;

    @staticmethod
    def get_remVersion(payload):
        return ((payload[3] & 0b11110000) >> 4);

    @staticmethod
    def get_messageId(payload):
        return ((payload[3] & 0b00001111));

    @staticmethod
    def get_timestamp(payload):
        return ((payload[4]) << 16) | ((payload[5]) << 8) | ((payload[6]));

    @staticmethod
    def get_payloadSize(payload):
        return ((payload[7]));

    @staticmethod
    def get_PbodyX(payload):
        _PbodyX = ((payload[8]) << 8) | ((payload[9]));
        return (_PbodyX * 0.0006103608758679);

    @staticmethod
    def get_IbodyX(payload):
        _IbodyX = ((payload[10]) << 8) | ((payload[11]));
        return (_IbodyX * 0.0003051804379339);

    @staticmethod
    def get_DbodyX(payload):
        _DbodyX = ((payload[12]) << 8) | ((payload[13]));
        return (_DbodyX * 0.0001525902189670);

    @staticmethod
    def get_PbodyY(payload):
        _PbodyY = ((payload[14]) << 8) | ((payload[15]));
        return (_PbodyY * 0.0006103608758679);

    @staticmethod
    def get_IbodyY(payload):
        _IbodyY = ((payload[16]) << 8) | ((payload[17]));
        return (_IbodyY * 0.0003051804379339);

    @staticmethod
    def get_DbodyY(payload):
        _DbodyY = ((payload[18]) << 8) | ((payload[19]));
        return (_DbodyY * 0.0001525902189670);

    @staticmethod
    def get_PbodyW(payload):
        _PbodyW = ((payload[20]) << 8) | ((payload[21]));
        return (_PbodyW * 0.0006103608758679);

    @staticmethod
    def get_IbodyW(payload):
        _IbodyW = ((payload[22]) << 8) | ((payload[23]));
        return (_IbodyW * 0.0003051804379339);

    @staticmethod
    def get_DbodyW(payload):
        _DbodyW = ((payload[24]) << 8) | ((payload[25]));
        return (_DbodyW * 0.0001525902189670);

    @staticmethod
    def get_PbodyYaw(payload):
        _PbodyYaw = ((payload[26]) << 8) | ((payload[27]));
        return (_PbodyYaw * 0.0006103608758679);

    @staticmethod
    def get_IbodyYaw(payload):
        _IbodyYaw = ((payload[28]) << 8) | ((payload[29]));
        return (_IbodyYaw * 0.0003051804379339);

    @staticmethod
    def get_DbodyYaw(payload):
        _DbodyYaw = ((payload[30]) << 8) | ((payload[31]));
        return (_DbodyYaw * 0.0001525902189670);

    @staticmethod
    def get_Pwheels(payload):
        _Pwheels = ((payload[32]) << 8) | ((payload[33]));
        return (_Pwheels * 0.0006103608758679);

    @staticmethod
    def get_Iwheels(payload):
        _Iwheels = ((payload[34]) << 8) | ((payload[35]));
        return (_Iwheels * 0.0003051804379339);

    @staticmethod
    def get_Dwheels(payload):
        _Dwheels = ((payload[36]) << 8) | ((payload[37]));
        return (_Dwheels * 0.0001525902189670);

# ================================ SETTERS ================================
    @staticmethod
    def set_header(payload, header):
        payload[0] = header;

    @staticmethod
    def set_toRobotId(payload, toRobotId):
        payload[1] = ((toRobotId << 4) & 0b11110000) | (payload[1] & 0b00001111);

    @staticmethod
    def set_toColor(payload, toColor):
        payload[1] = ((toColor << 3) & 0b00001000) | (payload[1] & 0b11110111);

    @staticmethod
    def set_toBC(payload, toBC):
        payload[1] = ((toBC << 2) & 0b00000100) | (payload[1] & 0b11111011);

    @staticmethod
    def set_toBS(payload, toBS):
        payload[1] = ((toBS << 1) & 0b00000010) | (payload[1] & 0b11111101);

    @staticmethod
    def set_toPC(payload, toPC):
        payload[1] = (toPC & 0b00000001) | (payload[1] & 0b11111110);

    @staticmethod
    def set_fromRobotId(payload, fromRobotId):
        payload[2] = ((fromRobotId << 4) & 0b11110000) | (payload[2] & 0b00001111);

    @staticmethod
    def set_fromColor(payload, fromColor):
        payload[2] = ((fromColor << 3) & 0b00001000) | (payload[2] & 0b11110111);

    @staticmethod
    def set_reserved(payload, reserved):
        payload[2] = ((reserved << 2) & 0b00000100) | (payload[2] & 0b11111011);

    @staticmethod
    def set_fromBS(payload, fromBS):
        payload[2] = ((fromBS << 1) & 0b00000010) | (payload[2] & 0b11111101);

    @staticmethod
    def set_fromPC(payload, fromPC):
        payload[2] = (fromPC & 0b00000001) | (payload[2] & 0b11111110);

    @staticmethod
    def set_remVersion(payload, remVersion):
        payload[3] = ((remVersion << 4) & 0b11110000) | (payload[3] & 0b00001111);

    @staticmethod
    def set_messageId(payload, messageId):
        payload[3] = (messageId & 0b00001111) | (payload[3] & 0b11110000);

    @staticmethod
    def set_timestamp(payload, timestamp):
        payload[4] = (timestamp >> 16);
        payload[5] = (timestamp >> 8);
        payload[6] = timestamp;

    @staticmethod
    def set_payloadSize(payload, payloadSize):
        payload[7] = payloadSize;

    @staticmethod
    def set_PbodyX(payload, PbodyX):
        _PbodyX = int(PbodyX / 0.0006103608758679);
        payload[8] = (_PbodyX >> 8);
        payload[9] = _PbodyX;

    @staticmethod
    def set_IbodyX(payload, IbodyX):
        _IbodyX = int(IbodyX / 0.0003051804379339);
        payload[10] = (_IbodyX >> 8);
        payload[11] = _IbodyX;

    @staticmethod
    def set_DbodyX(payload, DbodyX):
        _DbodyX = int(DbodyX / 0.0001525902189670);
        payload[12] = (_DbodyX >> 8);
        payload[13] = _DbodyX;

    @staticmethod
    def set_PbodyY(payload, PbodyY):
        _PbodyY = int(PbodyY / 0.0006103608758679);
        payload[14] = (_PbodyY >> 8);
        payload[15] = _PbodyY;

    @staticmethod
    def set_IbodyY(payload, IbodyY):
        _IbodyY = int(IbodyY / 0.0003051804379339);
        payload[16] = (_IbodyY >> 8);
        payload[17] = _IbodyY;

    @staticmethod
    def set_DbodyY(payload, DbodyY):
        _DbodyY = int(DbodyY / 0.0001525902189670);
        payload[18] = (_DbodyY >> 8);
        payload[19] = _DbodyY;

    @staticmethod
    def set_PbodyW(payload, PbodyW):
        _PbodyW = int(PbodyW / 0.0006103608758679);
        payload[20] = (_PbodyW >> 8);
        payload[21] = _PbodyW;

    @staticmethod
    def set_IbodyW(payload, IbodyW):
        _IbodyW = int(IbodyW / 0.0003051804379339);
        payload[22] = (_IbodyW >> 8);
        payload[23] = _IbodyW;

    @staticmethod
    def set_DbodyW(payload, DbodyW):
        _DbodyW = int(DbodyW / 0.0001525902189670);
        payload[24] = (_DbodyW >> 8);
        payload[25] = _DbodyW;

    @staticmethod
    def set_PbodyYaw(payload, PbodyYaw):
        _PbodyYaw = int(PbodyYaw / 0.0006103608758679);
        payload[26] = (_PbodyYaw >> 8);
        payload[27] = _PbodyYaw;

    @staticmethod
    def set_IbodyYaw(payload, IbodyYaw):
        _IbodyYaw = int(IbodyYaw / 0.0003051804379339);
        payload[28] = (_IbodyYaw >> 8);
        payload[29] = _IbodyYaw;

    @staticmethod
    def set_DbodyYaw(payload, DbodyYaw):
        _DbodyYaw = int(DbodyYaw / 0.0001525902189670);
        payload[30] = (_DbodyYaw >> 8);
        payload[31] = _DbodyYaw;

    @staticmethod
    def set_Pwheels(payload, Pwheels):
        _Pwheels = int(Pwheels / 0.0006103608758679);
        payload[32] = (_Pwheels >> 8);
        payload[33] = _Pwheels;

    @staticmethod
    def set_Iwheels(payload, Iwheels):
        _Iwheels = int(Iwheels / 0.0003051804379339);
        payload[34] = (_Iwheels >> 8);
        payload[35] = _Iwheels;

    @staticmethod
    def set_Dwheels(payload, Dwheels):
        _Dwheels = int(Dwheels / 0.0001525902189670);
        payload[36] = (_Dwheels >> 8);
        payload[37] = _Dwheels;

# ================================ ENCODE ================================
    def encode(self):
        payload = np.zeros(REM_BaseTypes.REM_PACKET_SIZE_REM_ROBOT_PIDGAINS, dtype=np.uint8)
        REM_RobotPIDGains.set_header              (payload, self.header)
        REM_RobotPIDGains.set_toRobotId           (payload, self.toRobotId)
        REM_RobotPIDGains.set_toColor             (payload, self.toColor)
        REM_RobotPIDGains.set_toBC                (payload, self.toBC)
        REM_RobotPIDGains.set_toBS                (payload, self.toBS)
        REM_RobotPIDGains.set_toPC                (payload, self.toPC)
        REM_RobotPIDGains.set_fromRobotId         (payload, self.fromRobotId)
        REM_RobotPIDGains.set_fromColor           (payload, self.fromColor)
        REM_RobotPIDGains.set_reserved            (payload, self.reserved)
        REM_RobotPIDGains.set_fromBS              (payload, self.fromBS)
        REM_RobotPIDGains.set_fromPC              (payload, self.fromPC)
        REM_RobotPIDGains.set_remVersion          (payload, self.remVersion)
        REM_RobotPIDGains.set_messageId           (payload, self.messageId)
        REM_RobotPIDGains.set_timestamp           (payload, self.timestamp)
        REM_RobotPIDGains.set_payloadSize         (payload, self.payloadSize)
        REM_RobotPIDGains.set_PbodyX              (payload, self.PbodyX)
        REM_RobotPIDGains.set_IbodyX              (payload, self.IbodyX)
        REM_RobotPIDGains.set_DbodyX              (payload, self.DbodyX)
        REM_RobotPIDGains.set_PbodyY              (payload, self.PbodyY)
        REM_RobotPIDGains.set_IbodyY              (payload, self.IbodyY)
        REM_RobotPIDGains.set_DbodyY              (payload, self.DbodyY)
        REM_RobotPIDGains.set_PbodyW              (payload, self.PbodyW)
        REM_RobotPIDGains.set_IbodyW              (payload, self.IbodyW)
        REM_RobotPIDGains.set_DbodyW              (payload, self.DbodyW)
        REM_RobotPIDGains.set_PbodyYaw            (payload, self.PbodyYaw)
        REM_RobotPIDGains.set_IbodyYaw            (payload, self.IbodyYaw)
        REM_RobotPIDGains.set_DbodyYaw            (payload, self.DbodyYaw)
        REM_RobotPIDGains.set_Pwheels             (payload, self.Pwheels)
        REM_RobotPIDGains.set_Iwheels             (payload, self.Iwheels)
        REM_RobotPIDGains.set_Dwheels             (payload, self.Dwheels)
        return payload


# ================================ DECODE ================================
    def decode(self, payload):
        self.header           = REM_RobotPIDGains.get_header(payload)
        self.toRobotId        = REM_RobotPIDGains.get_toRobotId(payload)
        self.toColor          = REM_RobotPIDGains.get_toColor(payload)
        self.toBC             = REM_RobotPIDGains.get_toBC(payload)
        self.toBS             = REM_RobotPIDGains.get_toBS(payload)
        self.toPC             = REM_RobotPIDGains.get_toPC(payload)
        self.fromRobotId      = REM_RobotPIDGains.get_fromRobotId(payload)
        self.fromColor        = REM_RobotPIDGains.get_fromColor(payload)
        self.reserved         = REM_RobotPIDGains.get_reserved(payload)
        self.fromBS           = REM_RobotPIDGains.get_fromBS(payload)
        self.fromPC           = REM_RobotPIDGains.get_fromPC(payload)
        self.remVersion       = REM_RobotPIDGains.get_remVersion(payload)
        self.messageId        = REM_RobotPIDGains.get_messageId(payload)
        self.timestamp        = REM_RobotPIDGains.get_timestamp(payload)
        self.payloadSize      = REM_RobotPIDGains.get_payloadSize(payload)
        self.PbodyX           = REM_RobotPIDGains.get_PbodyX(payload)
        self.IbodyX           = REM_RobotPIDGains.get_IbodyX(payload)
        self.DbodyX           = REM_RobotPIDGains.get_DbodyX(payload)
        self.PbodyY           = REM_RobotPIDGains.get_PbodyY(payload)
        self.IbodyY           = REM_RobotPIDGains.get_IbodyY(payload)
        self.DbodyY           = REM_RobotPIDGains.get_DbodyY(payload)
        self.PbodyW           = REM_RobotPIDGains.get_PbodyW(payload)
        self.IbodyW           = REM_RobotPIDGains.get_IbodyW(payload)
        self.DbodyW           = REM_RobotPIDGains.get_DbodyW(payload)
        self.PbodyYaw         = REM_RobotPIDGains.get_PbodyYaw(payload)
        self.IbodyYaw         = REM_RobotPIDGains.get_IbodyYaw(payload)
        self.DbodyYaw         = REM_RobotPIDGains.get_DbodyYaw(payload)
        self.Pwheels          = REM_RobotPIDGains.get_Pwheels(payload)
        self.Iwheels          = REM_RobotPIDGains.get_Iwheels(payload)
        self.Dwheels          = REM_RobotPIDGains.get_Dwheels(payload)


    def print_bit_string(self):
        payload = self.encode()
        for i in range(len(payload)):
            print(format(payload[i], '08b'), end=" ")
        print()
